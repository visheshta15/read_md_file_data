{"version":3,"sources":["Mddata.js","Rawdata.js","App.js","reportWebVitals.js","index.js"],"names":["Mddata","useState","post","setPost","setTextDoc","useEffect","a","result","console","log","default","fetch","res","text","text1","className","to","style","textDecoration","Rawdata","textdoc","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAiDeA,MA5Cf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAgBG,GAAhB,WA8BA,OAjBAC,oBAAS,sBAAC,gCAAAC,EAAA,+EAEiB,6BAFjB,cAEEC,EAFF,OAGJC,QAAQC,IAAIF,EAAOG,SAHf,SAIcC,MAAMJ,EAAOG,SAJ3B,cAIEE,EAJF,iBAKgBA,EAAIC,OALpB,QAKEC,EALF,OAMJN,QAAQC,IAAIK,GACZX,EAAQW,GACRV,EAAWU,GARP,kDAWJN,QAAQC,IAAR,MAXI,0DAcR,IAIA,sBAAKM,UAAU,MAAf,UACI,cAAC,IAAD,CAAMA,UAAU,aAAaC,GAAG,WAAWC,MAAO,CAAEC,eAAgB,QAApE,SACI,oBAAIH,UAAU,UAAd,0CAEN,cAAC,IAAD,UACGb,QCZMiB,MA1Bf,WACI,MAA8BlB,mBAAS,IAAvC,mBAAOmB,EAAP,KAAgBhB,EAAhB,KAcA,OAbAC,oBAAS,sBAAC,gCAAAC,EAAA,+EAEmB,6BAFnB,cAEIC,EAFJ,OAGFC,QAAQC,IAAIF,EAAOG,SAHjB,SAIgBC,MAAMJ,EAAOG,SAJ7B,cAIIE,EAJJ,iBAKkBA,EAAIC,OALtB,QAKIC,EALJ,OAMFV,EAAWU,GANT,kDASFN,QAAQC,IAAR,MATE,0DAYN,IAEA,gCACI,cAAC,IAAD,CAAMM,UAAU,aAAaC,GAAG,IAAKC,MAAO,CAAEC,eAAgB,QAA9D,SACA,oBAAIH,UAAU,UAAd,8BAEDK,MCNIC,MAbf,WACE,OACE,qBAAKN,UAAU,MAAf,SACC,cAAC,IAAD,UACG,eAAC,IAAD,WACE,cAAC,IAAD,CAAQO,KAAK,WAAb,SAAwB,cAAC,EAAD,MACxB,cAAC,IAAD,CAAQA,KAAK,IAAb,SAAiB,cAAC,EAAD,cCAZC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91f9129a.chunk.js","sourcesContent":["import React , {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Mddata() {\r\n  const [post, setPost] = useState(\"\");\r\n  const [textdoc, setTextDoc] = useState(\"\");\r\n\r\n  // useEffect(()=>{\r\n  //   import(`./markdown/data.md`)\r\n  //   .then(res=> {\r\n  //     fetch(res.default)\r\n  //     .then(res => res.text())\r\n  //     .then(res => setPost(res))\r\n  //     .catch(err => console.log(err))\r\n  //   })\r\n  //   .catch(err=> console.log(err))\r\n  // },[])\r\n\r\n  useEffect(async ()=> {\r\n    try {\r\n        const result = await import(`./markdown/data.md`)\r\n        console.log(result.default)\r\n        const res = await fetch(result.default)\r\n        const text1 = await res.text()\r\n        console.log(text1)\r\n        setPost(text1)\r\n        setTextDoc(text1)\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n       \r\n  },[])\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <Link className=\"app_navDiv\" to=\"/rowData\" style={{ textDecoration: 'none'}}>\r\n            <h3 className=\"app_nav\">Check raw data of .md file</h3>\r\n        </Link>\r\n      <Markdown>\r\n        {post}\r\n      </Markdown>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mddata;\r\n","import React , {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Rawdata() {\r\n    const [textdoc, setTextDoc] = useState(\"\");\r\n    useEffect(async ()=> {\r\n        try {\r\n            const result = await import(`./markdown/data.md`)\r\n            console.log(result.default)\r\n            const res = await fetch(result.default)\r\n            const text1 = await res.text()\r\n            setTextDoc(text1)\r\n    \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n           \r\n      },[])\r\n    return (\r\n        <div >\r\n            <Link className='app_navDiv' to=\"/\"  style={{ textDecoration: 'none'}}>\r\n            <h3 className=\"app_nav\">Check .md file</h3>\r\n          </Link>\r\n          {textdoc}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rawdata\r\n","import React , {useState,useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch,Link, Route} from \"react-router-dom\";\nimport Mddata from './Mddata';\nimport Rawdata from './Rawdata';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Router>\n        <Switch>\n          <Route  path=\"/rowData\"><Rawdata /></Route>\n          <Route  path=\"/\"><Mddata /></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}